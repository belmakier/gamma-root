// Do NOT change. Changes will be lost next time file is generated

#define R__DICTIONARY_FILENAME G__gamr_tree
#define R__NO_DEPRECATION

/*******************************************************************/
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#define G__DICTIONARY
#include "RConfig.h"
#include "TClass.h"
#include "TDictAttributeMap.h"
#include "TInterpreter.h"
#include "TROOT.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"
#include <algorithm>
#include "TCollectionProxyInfo.h"
/*******************************************************************/

#include "TDataMember.h"

// Header files passed as explicit arguments
#include "ExpDefn.hh"
#include "Event.hh"
#include "Detector.hh"
#include "DetDefn.hh"
#include "Reader.hh"

// Header files passed via #pragma extra_include

// The generated code does not explicitly qualify STL entities
namespace std {} using namespace std;

namespace GamR {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static TClass *GamR_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("GamR", 0 /*version*/, "ExpDefn.hh", 23,
                     ::ROOT::Internal::DefineBehavior((void*)nullptr,(void*)nullptr),
                     &GamR_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_DICT_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_DICT_(Init));

      // Dictionary for non-ClassDef classes
      static TClass *GamR_Dictionary() {
         return GenerateInitInstance()->GetClass();
      }

   }
}

namespace GamR {
   namespace Tree {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static TClass *GamRcLcLTree_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("GamR::Tree", 0 /*version*/, "ExpDefn.hh", 24,
                     ::ROOT::Internal::DefineBehavior((void*)nullptr,(void*)nullptr),
                     &GamRcLcLTree_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_DICT_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_DICT_(Init));

      // Dictionary for non-ClassDef classes
      static TClass *GamRcLcLTree_Dictionary() {
         return GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOT {
   static TClass *pairlEdoublecOdoublegR_Dictionary();
   static void pairlEdoublecOdoublegR_TClassManip(TClass*);
   static void *new_pairlEdoublecOdoublegR(void *p = nullptr);
   static void *newArray_pairlEdoublecOdoublegR(Long_t size, void *p);
   static void delete_pairlEdoublecOdoublegR(void *p);
   static void deleteArray_pairlEdoublecOdoublegR(void *p);
   static void destruct_pairlEdoublecOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<double,double>*)
   {
      pair<double,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<double,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<double,double>", "c++/v1/utility", 297,
                  typeid(pair<double,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEdoublecOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<double,double>) );
      instance.SetNew(&new_pairlEdoublecOdoublegR);
      instance.SetNewArray(&newArray_pairlEdoublecOdoublegR);
      instance.SetDelete(&delete_pairlEdoublecOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEdoublecOdoublegR);
      instance.SetDestructor(&destruct_pairlEdoublecOdoublegR);

      ::ROOT::AddClassAlternate("pair<double,double>","pair<Double_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<double,double>","std::__1::pair<double, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<double,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEdoublecOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<double,double>*)nullptr)->GetClass();
      pairlEdoublecOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEdoublecOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEULong64_tcOdoublegR_Dictionary();
   static void pairlEULong64_tcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEULong64_tcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEULong64_tcOdoublegR(Long_t size, void *p);
   static void delete_pairlEULong64_tcOdoublegR(void *p);
   static void deleteArray_pairlEULong64_tcOdoublegR(void *p);
   static void destruct_pairlEULong64_tcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<ULong64_t,double>*)
   {
      pair<ULong64_t,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<ULong64_t,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<ULong64_t,double>", "c++/v1/utility", 297,
                  typeid(pair<ULong64_t,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEULong64_tcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<ULong64_t,double>) );
      instance.SetNew(&new_pairlEULong64_tcOdoublegR);
      instance.SetNewArray(&newArray_pairlEULong64_tcOdoublegR);
      instance.SetDelete(&delete_pairlEULong64_tcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEULong64_tcOdoublegR);
      instance.SetDestructor(&destruct_pairlEULong64_tcOdoublegR);

      ::ROOT::AddClassAlternate("pair<ULong64_t,double>","pair<ULong64_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<ULong64_t,double>","std::__1::pair<unsigned long long, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<ULong64_t,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEULong64_tcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<ULong64_t,double>*)nullptr)->GetClass();
      pairlEULong64_tcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEULong64_tcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEunsignedsPintcOdoublegR_Dictionary();
   static void pairlEunsignedsPintcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEunsignedsPintcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEunsignedsPintcOdoublegR(Long_t size, void *p);
   static void delete_pairlEunsignedsPintcOdoublegR(void *p);
   static void deleteArray_pairlEunsignedsPintcOdoublegR(void *p);
   static void destruct_pairlEunsignedsPintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<unsigned int,double>*)
   {
      pair<unsigned int,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<unsigned int,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<unsigned int,double>", "c++/v1/utility", 297,
                  typeid(pair<unsigned int,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEunsignedsPintcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<unsigned int,double>) );
      instance.SetNew(&new_pairlEunsignedsPintcOdoublegR);
      instance.SetNewArray(&newArray_pairlEunsignedsPintcOdoublegR);
      instance.SetDelete(&delete_pairlEunsignedsPintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEunsignedsPintcOdoublegR);
      instance.SetDestructor(&destruct_pairlEunsignedsPintcOdoublegR);

      ::ROOT::AddClassAlternate("pair<unsigned int,double>","pair<UInt_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<unsigned int,double>","std::__1::pair<unsigned int, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<unsigned int,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEunsignedsPintcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<unsigned int,double>*)nullptr)->GetClass();
      pairlEunsignedsPintcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEunsignedsPintcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEintcOdoublegR_Dictionary();
   static void pairlEintcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEintcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEintcOdoublegR(Long_t size, void *p);
   static void delete_pairlEintcOdoublegR(void *p);
   static void deleteArray_pairlEintcOdoublegR(void *p);
   static void destruct_pairlEintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<int,double>*)
   {
      pair<int,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<int,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<int,double>", "c++/v1/utility", 297,
                  typeid(pair<int,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEintcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<int,double>) );
      instance.SetNew(&new_pairlEintcOdoublegR);
      instance.SetNewArray(&newArray_pairlEintcOdoublegR);
      instance.SetDelete(&delete_pairlEintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEintcOdoublegR);
      instance.SetDestructor(&destruct_pairlEintcOdoublegR);

      ::ROOT::AddClassAlternate("pair<int,double>","pair<Int_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<int,double>","std::__1::pair<int, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<int,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEintcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<int,double>*)nullptr)->GetClass();
      pairlEintcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEintcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEfloatcOdoublegR_Dictionary();
   static void pairlEfloatcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEfloatcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEfloatcOdoublegR(Long_t size, void *p);
   static void delete_pairlEfloatcOdoublegR(void *p);
   static void deleteArray_pairlEfloatcOdoublegR(void *p);
   static void destruct_pairlEfloatcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<float,double>*)
   {
      pair<float,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<float,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<float,double>", "c++/v1/utility", 297,
                  typeid(pair<float,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEfloatcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<float,double>) );
      instance.SetNew(&new_pairlEfloatcOdoublegR);
      instance.SetNewArray(&newArray_pairlEfloatcOdoublegR);
      instance.SetDelete(&delete_pairlEfloatcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEfloatcOdoublegR);
      instance.SetDestructor(&destruct_pairlEfloatcOdoublegR);

      ::ROOT::AddClassAlternate("pair<float,double>","pair<Float_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<float,double>","std::__1::pair<float, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<float,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEfloatcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<float,double>*)nullptr)->GetClass();
      pairlEfloatcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEfloatcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEboolcOdoublegR_Dictionary();
   static void pairlEboolcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEboolcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEboolcOdoublegR(Long_t size, void *p);
   static void delete_pairlEboolcOdoublegR(void *p);
   static void deleteArray_pairlEboolcOdoublegR(void *p);
   static void destruct_pairlEboolcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<bool,double>*)
   {
      pair<bool,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<bool,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<bool,double>", "c++/v1/utility", 297,
                  typeid(pair<bool,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEboolcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<bool,double>) );
      instance.SetNew(&new_pairlEboolcOdoublegR);
      instance.SetNewArray(&newArray_pairlEboolcOdoublegR);
      instance.SetDelete(&delete_pairlEboolcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEboolcOdoublegR);
      instance.SetDestructor(&destruct_pairlEboolcOdoublegR);

      ::ROOT::AddClassAlternate("pair<bool,double>","pair<Bool_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<bool,double>","std::__1::pair<bool, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<bool,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEboolcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<bool,double>*)nullptr)->GetClass();
      pairlEboolcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEboolcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEunsignedsPshortcOdoublegR_Dictionary();
   static void pairlEunsignedsPshortcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEunsignedsPshortcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEunsignedsPshortcOdoublegR(Long_t size, void *p);
   static void delete_pairlEunsignedsPshortcOdoublegR(void *p);
   static void deleteArray_pairlEunsignedsPshortcOdoublegR(void *p);
   static void destruct_pairlEunsignedsPshortcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<unsigned short,double>*)
   {
      pair<unsigned short,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<unsigned short,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<unsigned short,double>", "c++/v1/utility", 297,
                  typeid(pair<unsigned short,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEunsignedsPshortcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<unsigned short,double>) );
      instance.SetNew(&new_pairlEunsignedsPshortcOdoublegR);
      instance.SetNewArray(&newArray_pairlEunsignedsPshortcOdoublegR);
      instance.SetDelete(&delete_pairlEunsignedsPshortcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEunsignedsPshortcOdoublegR);
      instance.SetDestructor(&destruct_pairlEunsignedsPshortcOdoublegR);

      ::ROOT::AddClassAlternate("pair<unsigned short,double>","pair<UShort_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<unsigned short,double>","std::__1::pair<unsigned short, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<unsigned short,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEunsignedsPshortcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<unsigned short,double>*)nullptr)->GetClass();
      pairlEunsignedsPshortcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEunsignedsPshortcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEcharcOdoublegR_Dictionary();
   static void pairlEcharcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEcharcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEcharcOdoublegR(Long_t size, void *p);
   static void delete_pairlEcharcOdoublegR(void *p);
   static void deleteArray_pairlEcharcOdoublegR(void *p);
   static void destruct_pairlEcharcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<char,double>*)
   {
      pair<char,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<char,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<char,double>", "c++/v1/utility", 297,
                  typeid(pair<char,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEcharcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<char,double>) );
      instance.SetNew(&new_pairlEcharcOdoublegR);
      instance.SetNewArray(&newArray_pairlEcharcOdoublegR);
      instance.SetDelete(&delete_pairlEcharcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEcharcOdoublegR);
      instance.SetDestructor(&destruct_pairlEcharcOdoublegR);

      ::ROOT::AddClassAlternate("pair<char,double>","pair<Char_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<char,double>","std::__1::pair<char, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<char,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEcharcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<char,double>*)nullptr)->GetClass();
      pairlEcharcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEcharcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEunsignedsPcharcOdoublegR_Dictionary();
   static void pairlEunsignedsPcharcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEunsignedsPcharcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEunsignedsPcharcOdoublegR(Long_t size, void *p);
   static void delete_pairlEunsignedsPcharcOdoublegR(void *p);
   static void deleteArray_pairlEunsignedsPcharcOdoublegR(void *p);
   static void destruct_pairlEunsignedsPcharcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<unsigned char,double>*)
   {
      pair<unsigned char,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<unsigned char,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<unsigned char,double>", "c++/v1/utility", 297,
                  typeid(pair<unsigned char,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEunsignedsPcharcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<unsigned char,double>) );
      instance.SetNew(&new_pairlEunsignedsPcharcOdoublegR);
      instance.SetNewArray(&newArray_pairlEunsignedsPcharcOdoublegR);
      instance.SetDelete(&delete_pairlEunsignedsPcharcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEunsignedsPcharcOdoublegR);
      instance.SetDestructor(&destruct_pairlEunsignedsPcharcOdoublegR);

      ::ROOT::AddClassAlternate("pair<unsigned char,double>","pair<UChar_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<unsigned char,double>","std::__1::pair<unsigned char, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<unsigned char,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEunsignedsPcharcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<unsigned char,double>*)nullptr)->GetClass();
      pairlEunsignedsPcharcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEunsignedsPcharcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlEshortcOdoublegR_Dictionary();
   static void pairlEshortcOdoublegR_TClassManip(TClass*);
   static void *new_pairlEshortcOdoublegR(void *p = nullptr);
   static void *newArray_pairlEshortcOdoublegR(Long_t size, void *p);
   static void delete_pairlEshortcOdoublegR(void *p);
   static void deleteArray_pairlEshortcOdoublegR(void *p);
   static void destruct_pairlEshortcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<short,double>*)
   {
      pair<short,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<short,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<short,double>", "c++/v1/utility", 297,
                  typeid(pair<short,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlEshortcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<short,double>) );
      instance.SetNew(&new_pairlEshortcOdoublegR);
      instance.SetNewArray(&newArray_pairlEshortcOdoublegR);
      instance.SetDelete(&delete_pairlEshortcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlEshortcOdoublegR);
      instance.SetDestructor(&destruct_pairlEshortcOdoublegR);

      ::ROOT::AddClassAlternate("pair<short,double>","pair<Short_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<short,double>","std::__1::pair<short, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<short,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlEshortcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<short,double>*)nullptr)->GetClass();
      pairlEshortcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlEshortcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *pairlELong64_tcOdoublegR_Dictionary();
   static void pairlELong64_tcOdoublegR_TClassManip(TClass*);
   static void *new_pairlELong64_tcOdoublegR(void *p = nullptr);
   static void *newArray_pairlELong64_tcOdoublegR(Long_t size, void *p);
   static void delete_pairlELong64_tcOdoublegR(void *p);
   static void deleteArray_pairlELong64_tcOdoublegR(void *p);
   static void destruct_pairlELong64_tcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<Long64_t,double>*)
   {
      pair<Long64_t,double> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<Long64_t,double>));
      static ::ROOT::TGenericClassInfo 
         instance("pair<Long64_t,double>", "c++/v1/utility", 297,
                  typeid(pair<Long64_t,double>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &pairlELong64_tcOdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(pair<Long64_t,double>) );
      instance.SetNew(&new_pairlELong64_tcOdoublegR);
      instance.SetNewArray(&newArray_pairlELong64_tcOdoublegR);
      instance.SetDelete(&delete_pairlELong64_tcOdoublegR);
      instance.SetDeleteArray(&deleteArray_pairlELong64_tcOdoublegR);
      instance.SetDestructor(&destruct_pairlELong64_tcOdoublegR);

      ::ROOT::AddClassAlternate("pair<Long64_t,double>","pair<Long64_t,Double_t>");

      ::ROOT::AddClassAlternate("pair<Long64_t,double>","std::__1::pair<long long, double>");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const pair<Long64_t,double>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *pairlELong64_tcOdoublegR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const pair<Long64_t,double>*)nullptr)->GetClass();
      pairlELong64_tcOdoublegR_TClassManip(theClass);
   return theClass;
   }

   static void pairlELong64_tcOdoublegR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned long long, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned long long, double, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, double, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, double, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, double, unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >","tuple<std::pair<ULong64_t,Double_t>,std::pair<Double_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned long long, double>, std::__1::pair<double, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned int,double> >*)
   {
      ::tuple<pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double> >","tuple<std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >","tuple<std::vector<GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t> >,std::vector<GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<double, double, int, int, float, float, float, float, float, float, float, float>, std::__1::allocator<GamR::Tree::TDetector<double, double, int, int, float, float, float, float, float, float, float, float> > >, std::__1::vector<GamR::Tree::TDetector<double, double, int, int, int, int, int, int, int, int, float, float, float, float, float, float, float, bool, bool>, std::__1::allocator<GamR::Tree::TDetector<double, double, int, int, int, int, int, int, int, int, float, float, float, float, float, float, float, bool, bool> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >*)
   {
      ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >) );
      instance.SetNew(&new_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >","tuple<std::pair<Double_t,Double_t>,std::pair<Double_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >","std::__1::tuple<std::__1::pair<double, double>, std::__1::pair<double, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >*)nullptr)->GetClass();
      tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >*)
   {
      ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >) );
      instance.SetNew(&new_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >","tuple<std::pair<Double_t,Double_t>,std::pair<Double_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Bool_t,Double_t>,std::pair<Bool_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >","std::__1::tuple<std::__1::pair<double, double>, std::__1::pair<double, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<int, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<float, double>, std::__1::pair<bool, double>, std::__1::pair<bool, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >*)nullptr)->GetClass();
      tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned long long, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned long long, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int> > >, std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >","tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>, std::__1::allocator<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)
   {
      ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >) );
      instance.SetNew(&new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >","std::__1::tuple<std::__1::pair<unsigned long long, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double>, std::__1::pair<unsigned int, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)nullptr)->GetClass();
      tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >*)
   {
      ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >","tuple<std::pair<UShort_t,Double_t>,std::pair<UShort_t,Double_t>,std::pair<UShort_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >","std::__1::tuple<std::__1::pair<unsigned short, double>, std::__1::pair<unsigned short, double>, std::__1::pair<unsigned short, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPshortcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned short,double> >*)
   {
      ::tuple<pair<unsigned short,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned short,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned short,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned short,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPshortcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned short,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPshortcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned short,double> >","tuple<std::pair<UShort_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned short,double> >","std::__1::tuple<std::__1::pair<unsigned short, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned short,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPshortcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned short,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_Dictionary();
   static void tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(TClass*);
   static void *new_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p = nullptr);
   static void *newArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(Long_t size, void *p);
   static void delete_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p);
   static void deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p);
   static void destruct_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<pair<unsigned short,double>,pair<unsigned short,double> >*)
   {
      ::tuple<pair<unsigned short,double>,pair<unsigned short,double> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<pair<unsigned short,double>,pair<unsigned short,double> >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<pair<unsigned short,double>,pair<unsigned short,double> >", "c++/v1/tuple", 477,
                  typeid(::tuple<pair<unsigned short,double>,pair<unsigned short,double> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<pair<unsigned short,double>,pair<unsigned short,double> >) );
      instance.SetNew(&new_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetNewArray(&newArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDelete(&delete_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);
      instance.SetDestructor(&destruct_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR);

      ::ROOT::AddClassAlternate("tuple<pair<unsigned short,double>,pair<unsigned short,double> >","tuple<std::pair<UShort_t,Double_t>,std::pair<UShort_t,Double_t> >");

      ::ROOT::AddClassAlternate("tuple<pair<unsigned short,double>,pair<unsigned short,double> >","std::__1::tuple<std::__1::pair<unsigned short, double>, std::__1::pair<unsigned short, double> >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<pair<unsigned short,double>,pair<unsigned short,double> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<pair<unsigned short,double>,pair<unsigned short,double> >*)nullptr)->GetClass();
      tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > >, std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short, unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short, unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary();
   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass*);
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p = nullptr);
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tuple<vector<GamR::Tree::TDetector<unsigned short> > >*)
   {
      ::tuple<vector<GamR::Tree::TDetector<unsigned short> > > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short> > >));
      static ::ROOT::TGenericClassInfo 
         instance("tuple<vector<GamR::Tree::TDetector<unsigned short> > >", "c++/v1/tuple", 477,
                  typeid(::tuple<vector<GamR::Tree::TDetector<unsigned short> > >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::tuple<vector<GamR::Tree::TDetector<unsigned short> > >) );
      instance.SetNew(&new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR);

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short> > >","tuple<std::vector<GamR::Tree::TDetector<UShort_t> > >");

      ::ROOT::AddClassAlternate("tuple<vector<GamR::Tree::TDetector<unsigned short> > >","std::__1::tuple<std::__1::vector<GamR::Tree::TDetector<unsigned short>, std::__1::allocator<GamR::Tree::TDetector<unsigned short> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::tuple<vector<GamR::Tree::TDetector<unsigned short> > >*)nullptr)->GetClass();
      tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,Double_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,Double_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned long long, double, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, double, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned int>, GamR::Tree::TDetDefn<unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>,GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double, double, int, int, float, float, float, float, float, float, float, float>, GamR::Tree::TDetDefn<double, double, int, int, int, int, int, int, int, int, float, float, float, float, float, float, float, bool, bool> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t>,GamR::Tree::TDetDefn<UShort_t>,GamR::Tree::TDetDefn<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short>, GamR::Tree::TDetDefn<unsigned short>, GamR::Tree::TDetDefn<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short>, GamR::Tree::TDetDefn<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)
   {
      ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >", ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::Class_Version(), "ExpDefn.hh", 27,
                  typeid(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >","GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned long long, double, unsigned int>, GamR::Tree::TDetector<unsigned long long, double, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned int>, GamR::Tree::TDetector<unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >","GamR::Tree::TEvent<GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>,GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >","GamR::Tree::TEvent<GamR::Tree::TDetector<double, double, int, int, float, float, float, float, float, float, float, float>, GamR::Tree::TDetector<double, double, int, int, int, int, int, int, int, int, float, float, float, float, float, float, float, bool, bool> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>, GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t>,GamR::Tree::TDetector<UShort_t>,GamR::Tree::TDetector<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short>, GamR::Tree::TDetector<unsigned short>, GamR::Tree::TDetector<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short>, GamR::Tree::TDetector<unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t> >");

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short, unsigned short> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary();
   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)
   {
      ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> > >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >", ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >::Class_Version(), "Event.hh", 19,
                  typeid(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >) );
      instance.SetNew(&new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >","GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t> >");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
      GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>", ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>","GamR::Tree::TDetDefn<ULong64_t,Double_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>","GamR::Tree::TDetDefn<unsigned long long, double, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int>","GamR::Tree::TDetDefn<UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned int>", ::GamR::Tree::TDetDefn<unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned int>","GamR::Tree::TDetDefn<UInt_t>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)
   {
      ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>", ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>","GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>","GamR::Tree::TDetDefn<double, double, int, int, float, float, float, float, float, float, float, float>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)
   {
      ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>", ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>","GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>","GamR::Tree::TDetDefn<double, double, int, int, int, int, int, int, int, int, float, float, float, float, float, float, float, bool, bool>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>","GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetDefn<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)
   {
      ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>", ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>","GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>","GamR::Tree::TDetDefn<unsigned short, unsigned short, unsigned short>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)
   {
      ::GamR::Tree::TDetDefn<unsigned short,unsigned short> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned short,unsigned short> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned short,unsigned short>", ::GamR::Tree::TDetDefn<unsigned short,unsigned short>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned short,unsigned short>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned short,unsigned short>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned short,unsigned short>","GamR::Tree::TDetDefn<UShort_t,UShort_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned short,unsigned short>","GamR::Tree::TDetDefn<unsigned short, unsigned short>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR_Dictionary();
   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetDefn<unsigned short>*)
   {
      ::GamR::Tree::TDetDefn<unsigned short> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetDefn<unsigned short> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetDefn<unsigned short>", ::GamR::Tree::TDetDefn<unsigned short>::Class_Version(), "DetDefn.hh", 24,
                  typeid(::GamR::Tree::TDetDefn<unsigned short>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetDefn<unsigned short>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetDefn<unsigned short>","GamR::Tree::TDetDefn<UShort_t>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetDefn<unsigned short>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetDefn<unsigned short>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)
   {
      ::GamR::Tree::TDetector<ULong64_t,double,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<ULong64_t,double,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<ULong64_t,double,unsigned int>", ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<ULong64_t,double,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<ULong64_t,double,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,double,unsigned int>","GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,double,unsigned int>","GamR::Tree::TDetector<unsigned long long, double, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned int,unsigned int>", ::GamR::Tree::TDetector<unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int>","GamR::Tree::TDetector<UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned int>*)
   {
      ::GamR::Tree::TDetector<unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned int>", ::GamR::Tree::TDetector<unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned int>","GamR::Tree::TDetector<UInt_t>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)
   {
      ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>", ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>","GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>","GamR::Tree::TDetector<double, double, int, int, float, float, float, float, float, float, float, float>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)
   {
      ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>", ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>","GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>","GamR::Tree::TDetector<double, double, int, int, int, int, int, int, int, int, float, float, float, float, float, float, float, bool, bool>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>", ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>","GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>","GamR::Tree::TDetector<unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)
   {
      ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>", ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>","GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>","GamR::Tree::TDetector<unsigned short, unsigned short, unsigned short>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)
   {
      ::GamR::Tree::TDetector<unsigned short,unsigned short> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned short,unsigned short> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned short,unsigned short>", ::GamR::Tree::TDetector<unsigned short,unsigned short>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned short,unsigned short>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned short,unsigned short>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned short,unsigned short>","GamR::Tree::TDetector<UShort_t,UShort_t>");

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned short,unsigned short>","GamR::Tree::TDetector<unsigned short, unsigned short>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned short,unsigned short>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR_Dictionary();
   static void GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR_TClassManip(TClass*);
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p = nullptr);
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p);
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p);
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GamR::Tree::TDetector<unsigned short>*)
   {
      ::GamR::Tree::TDetector<unsigned short> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GamR::Tree::TDetector<unsigned short> >(nullptr);
      static ::ROOT::TGenericClassInfo 
         instance("GamR::Tree::TDetector<unsigned short>", ::GamR::Tree::TDetector<unsigned short>::Class_Version(), "Detector.hh", 18,
                  typeid(::GamR::Tree::TDetector<unsigned short>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::GamR::Tree::TDetector<unsigned short>) );
      instance.SetNew(&new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR);

      ::ROOT::AddClassAlternate("GamR::Tree::TDetector<unsigned short>","GamR::Tree::TDetector<UShort_t>");
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GamR::Tree::TDetector<unsigned short>*)
   {
      return GenerateInitInstanceLocal((::GamR::Tree::TDetector<unsigned short>*)nullptr);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short>*)nullptr)->GetClass();
      GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR_TClassManip(theClass);
   return theClass;
   }

   static void GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TEvent<GamR::Tree::TDetector<unsigned short> >::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short> >::Class_Name()
{
   return "GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >";
}

//______________________________________________________________________________
template <> const char *TEvent<GamR::Tree::TDetector<unsigned short> >::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TEvent<GamR::Tree::TDetector<unsigned short> >::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short> >::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TEvent<GamR::Tree::TDetector<unsigned short> >::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<ULong64_t,double,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,double,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,double,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<ULong64_t,double,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,double,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,double,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::Class_Name()
{
   return "GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class_Name()
{
   return "GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<ULong64_t,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<ULong64_t,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned short,unsigned short,unsigned short>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned short,unsigned short,unsigned short>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned short,unsigned short,unsigned short>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned short,unsigned short,unsigned short>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned short,unsigned short,unsigned short>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned short,unsigned short,unsigned short>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned short,unsigned short>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned short,unsigned short>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned short,unsigned short>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned short,unsigned short>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned short,unsigned short>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned short,unsigned short>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned short,unsigned short>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetDefn<unsigned short>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned short>::Class_Name()
{
   return "GamR::Tree::TDetDefn<unsigned short>";
}

//______________________________________________________________________________
template <> const char *TDetDefn<unsigned short>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetDefn<unsigned short>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned short>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetDefn<unsigned short>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetDefn<unsigned short>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<ULong64_t,double,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,double,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<ULong64_t,double,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,double,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<ULong64_t,double,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,double,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,double,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::Class_Name()
{
   return "GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>";
}

//______________________________________________________________________________
template <> const char *TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class_Name()
{
   return "GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>";
}

//______________________________________________________________________________
template <> const char *TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<ULong64_t,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<ULong64_t,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class_Name()
{
   return "GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>";
}

//______________________________________________________________________________
template <> const char *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned short,unsigned short,unsigned short>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned short,unsigned short,unsigned short>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned short,unsigned short,unsigned short>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned short,unsigned short,unsigned short>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned short,unsigned short,unsigned short>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned short,unsigned short,unsigned short>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned short,unsigned short>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned short,unsigned short>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned short,unsigned short>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned short,unsigned short>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned short,unsigned short>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned short,unsigned short>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned short,unsigned short>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short,unsigned short>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> atomic_TClass_ptr TDetector<unsigned short>::fgIsA(nullptr);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *TDetector<unsigned short>::Class_Name()
{
   return "GamR::Tree::TDetector<unsigned short>";
}

//______________________________________________________________________________
template <> const char *TDetector<unsigned short>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short>*)nullptr)->GetImplFileName();
}

//______________________________________________________________________________
template <> int TDetector<unsigned short>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short>*)nullptr)->GetImplFileLine();
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned short>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short>*)nullptr)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
template <> TClass *TDetector<unsigned short>::Class()
{
   if (!fgIsA.load()) { R__LOCKGUARD(gInterpreterMutex); fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GamR::Tree::TDetector<unsigned short>*)nullptr)->GetClass(); }
   return fgIsA;
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEdoublecOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<double,double> : new pair<double,double>;
   }
   static void *newArray_pairlEdoublecOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<double,double>[nElements] : new pair<double,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEdoublecOdoublegR(void *p) {
      delete ((pair<double,double>*)p);
   }
   static void deleteArray_pairlEdoublecOdoublegR(void *p) {
      delete [] ((pair<double,double>*)p);
   }
   static void destruct_pairlEdoublecOdoublegR(void *p) {
      typedef pair<double,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<double,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEULong64_tcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<ULong64_t,double> : new pair<ULong64_t,double>;
   }
   static void *newArray_pairlEULong64_tcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<ULong64_t,double>[nElements] : new pair<ULong64_t,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEULong64_tcOdoublegR(void *p) {
      delete ((pair<ULong64_t,double>*)p);
   }
   static void deleteArray_pairlEULong64_tcOdoublegR(void *p) {
      delete [] ((pair<ULong64_t,double>*)p);
   }
   static void destruct_pairlEULong64_tcOdoublegR(void *p) {
      typedef pair<ULong64_t,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<ULong64_t,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEunsignedsPintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<unsigned int,double> : new pair<unsigned int,double>;
   }
   static void *newArray_pairlEunsignedsPintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<unsigned int,double>[nElements] : new pair<unsigned int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEunsignedsPintcOdoublegR(void *p) {
      delete ((pair<unsigned int,double>*)p);
   }
   static void deleteArray_pairlEunsignedsPintcOdoublegR(void *p) {
      delete [] ((pair<unsigned int,double>*)p);
   }
   static void destruct_pairlEunsignedsPintcOdoublegR(void *p) {
      typedef pair<unsigned int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<unsigned int,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<int,double> : new pair<int,double>;
   }
   static void *newArray_pairlEintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<int,double>[nElements] : new pair<int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEintcOdoublegR(void *p) {
      delete ((pair<int,double>*)p);
   }
   static void deleteArray_pairlEintcOdoublegR(void *p) {
      delete [] ((pair<int,double>*)p);
   }
   static void destruct_pairlEintcOdoublegR(void *p) {
      typedef pair<int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<int,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEfloatcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<float,double> : new pair<float,double>;
   }
   static void *newArray_pairlEfloatcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<float,double>[nElements] : new pair<float,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEfloatcOdoublegR(void *p) {
      delete ((pair<float,double>*)p);
   }
   static void deleteArray_pairlEfloatcOdoublegR(void *p) {
      delete [] ((pair<float,double>*)p);
   }
   static void destruct_pairlEfloatcOdoublegR(void *p) {
      typedef pair<float,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<float,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEboolcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<bool,double> : new pair<bool,double>;
   }
   static void *newArray_pairlEboolcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<bool,double>[nElements] : new pair<bool,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEboolcOdoublegR(void *p) {
      delete ((pair<bool,double>*)p);
   }
   static void deleteArray_pairlEboolcOdoublegR(void *p) {
      delete [] ((pair<bool,double>*)p);
   }
   static void destruct_pairlEboolcOdoublegR(void *p) {
      typedef pair<bool,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<bool,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEunsignedsPshortcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<unsigned short,double> : new pair<unsigned short,double>;
   }
   static void *newArray_pairlEunsignedsPshortcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<unsigned short,double>[nElements] : new pair<unsigned short,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEunsignedsPshortcOdoublegR(void *p) {
      delete ((pair<unsigned short,double>*)p);
   }
   static void deleteArray_pairlEunsignedsPshortcOdoublegR(void *p) {
      delete [] ((pair<unsigned short,double>*)p);
   }
   static void destruct_pairlEunsignedsPshortcOdoublegR(void *p) {
      typedef pair<unsigned short,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<unsigned short,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEcharcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<char,double> : new pair<char,double>;
   }
   static void *newArray_pairlEcharcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<char,double>[nElements] : new pair<char,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEcharcOdoublegR(void *p) {
      delete ((pair<char,double>*)p);
   }
   static void deleteArray_pairlEcharcOdoublegR(void *p) {
      delete [] ((pair<char,double>*)p);
   }
   static void destruct_pairlEcharcOdoublegR(void *p) {
      typedef pair<char,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<char,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEunsignedsPcharcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<unsigned char,double> : new pair<unsigned char,double>;
   }
   static void *newArray_pairlEunsignedsPcharcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<unsigned char,double>[nElements] : new pair<unsigned char,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEunsignedsPcharcOdoublegR(void *p) {
      delete ((pair<unsigned char,double>*)p);
   }
   static void deleteArray_pairlEunsignedsPcharcOdoublegR(void *p) {
      delete [] ((pair<unsigned char,double>*)p);
   }
   static void destruct_pairlEunsignedsPcharcOdoublegR(void *p) {
      typedef pair<unsigned char,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<unsigned char,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEshortcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<short,double> : new pair<short,double>;
   }
   static void *newArray_pairlEshortcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<short,double>[nElements] : new pair<short,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEshortcOdoublegR(void *p) {
      delete ((pair<short,double>*)p);
   }
   static void deleteArray_pairlEshortcOdoublegR(void *p) {
      delete [] ((pair<short,double>*)p);
   }
   static void destruct_pairlEshortcOdoublegR(void *p) {
      typedef pair<short,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<short,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlELong64_tcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<Long64_t,double> : new pair<Long64_t,double>;
   }
   static void *newArray_pairlELong64_tcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) pair<Long64_t,double>[nElements] : new pair<Long64_t,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlELong64_tcOdoublegR(void *p) {
      delete ((pair<Long64_t,double>*)p);
   }
   static void deleteArray_pairlELong64_tcOdoublegR(void *p) {
      delete [] ((pair<Long64_t,double>*)p);
   }
   static void destruct_pairlELong64_tcOdoublegR(void *p) {
      typedef pair<Long64_t,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<Long64_t,double>

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> > : new ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEdoublecOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double> > : new ::tuple<pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double> >[nElements] : new ::tuple<pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > > : new ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> > : new ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >;
   }
   static void *newArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >[nElements] : new ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >*)p);
   }
   static void destruct_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> > : new ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >;
   }
   static void *newArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >[nElements] : new ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >*)p);
   }
   static void destruct_tuplelEpairlEdoublecOdoublegRcOpairlEdoublecOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEintcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEfloatcOdoublegRcOpairlEboolcOdoublegRcOpairlEboolcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > > : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >;
   }
   static void *newArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements] : new ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >*)p);
   }
   static void destruct_tuplelEpairlEULong64_tcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRcOpairlEunsignedsPintcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> > : new ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >[nElements] : new ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned short,double> > : new ::tuple<pair<unsigned short,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned short,double> >[nElements] : new ::tuple<pair<unsigned short,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned short,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned short,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned short,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned short,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned short,double>,pair<unsigned short,double> > : new ::tuple<pair<unsigned short,double>,pair<unsigned short,double> >;
   }
   static void *newArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<pair<unsigned short,double>,pair<unsigned short,double> >[nElements] : new ::tuple<pair<unsigned short,double>,pair<unsigned short,double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      delete ((::tuple<pair<unsigned short,double>,pair<unsigned short,double> >*)p);
   }
   static void deleteArray_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      delete [] ((::tuple<pair<unsigned short,double>,pair<unsigned short,double> >*)p);
   }
   static void destruct_tuplelEpairlEunsignedsPshortcOdoublegRcOpairlEunsignedsPshortcOdoublegRsPgR(void *p) {
      typedef ::tuple<pair<unsigned short,double>,pair<unsigned short,double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<pair<unsigned short,double>,pair<unsigned short,double> >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRcOvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >

namespace ROOT {
   // Wrappers around operator new
   static void *new_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short> > > : new ::tuple<vector<GamR::Tree::TDetector<unsigned short> > >;
   }
   static void *newArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) ::tuple<vector<GamR::Tree::TDetector<unsigned short> > >[nElements] : new ::tuple<vector<GamR::Tree::TDetector<unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((::tuple<vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void deleteArray_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((::tuple<vector<GamR::Tree::TDetector<unsigned short> > >*)p);
   }
   static void destruct_tuplelEvectorlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      typedef ::tuple<vector<GamR::Tree::TDetector<unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tuple<vector<GamR::Tree::TDetector<unsigned short> > >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> > : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >[nElements] : new ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTExpDefnlEGamRcLcLTreecLcLTDetDefnlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgRcOGamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgRcOGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRcOGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TEvent<GamR::Tree::TDetector<unsigned short> >::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> > : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >;
   }
   static void *newArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >[nElements] : new ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >*)p);
   }
   static void destruct_GamRcLcLTreecLcLTEventlEGamRcLcLTreecLcLTDetectorlEunsignedsPshortgRsPgR(void *p) {
      typedef ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<ULong64_t,double,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> : new ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned int> : new ::GamR::Tree::TDetDefn<unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float> : new ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>[nElements] : new ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> : new ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>[nElements] : new ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<ULong64_t,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned short,unsigned short,unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> : new ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>[nElements] : new ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned short,unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned short,unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned short,unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned short,unsigned short>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned short,unsigned short> : new ::GamR::Tree::TDetDefn<unsigned short,unsigned short>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned short,unsigned short>[nElements] : new ::GamR::Tree::TDetDefn<unsigned short,unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned short,unsigned short>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned short,unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned short,unsigned short>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetDefn<unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetDefn<unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetDefn<unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetDefn<unsigned short>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetDefn<unsigned short> : new ::GamR::Tree::TDetDefn<unsigned short>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetDefn<unsigned short>[nElements] : new ::GamR::Tree::TDetDefn<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p) {
      delete ((::GamR::Tree::TDetDefn<unsigned short>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p) {
      delete [] ((::GamR::Tree::TDetDefn<unsigned short>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetDefnlEunsignedsPshortgR(void *p) {
      typedef ::GamR::Tree::TDetDefn<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetDefn<unsigned short>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<ULong64_t,double,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<ULong64_t,double,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<ULong64_t,double,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<ULong64_t,double,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<ULong64_t,double,unsigned int> : new ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>[nElements] : new ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<ULong64_t,double,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOdoublecOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<ULong64_t,double,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<ULong64_t,double,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int> : new ::GamR::Tree::TDetector<unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned int> : new ::GamR::Tree::TDetector<unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned int>[nElements] : new ::GamR::Tree::TDetector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> : new ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>[nElements] : new ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      delete ((::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatgR(void *p) {
      typedef ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> : new ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>[nElements] : new ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      delete ((::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEdoublecOdoublecOintcOintcOintcOintcOintcOintcOintcOintcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOfloatcOboolcOboolgR(void *p) {
      typedef ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<ULong64_t,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements] : new ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEULong64_tcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintcOunsignedsPintgR(void *p) {
      typedef ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned short,unsigned short,unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> : new ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>[nElements] : new ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortcOunsignedsPshortgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned short,unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned short,unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned short,unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned short,unsigned short>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned short,unsigned short> : new ::GamR::Tree::TDetector<unsigned short,unsigned short>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned short,unsigned short>[nElements] : new ::GamR::Tree::TDetector<unsigned short,unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned short,unsigned short>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned short,unsigned short>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortcOunsignedsPshortgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned short,unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned short,unsigned short>

namespace GamR {
   namespace Tree {
//______________________________________________________________________________
template <> void TDetector<unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class GamR::Tree::TDetector<unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GamR::Tree::TDetector<unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(GamR::Tree::TDetector<unsigned short>::Class(),this);
   }
}

} // namespace GamR::Tree
} // namespace GamR::Tree
namespace ROOT {
   // Wrappers around operator new
   static void *new_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p) {
      return  p ? new(p) ::GamR::Tree::TDetector<unsigned short> : new ::GamR::Tree::TDetector<unsigned short>;
   }
   static void *newArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::GamR::Tree::TDetector<unsigned short>[nElements] : new ::GamR::Tree::TDetector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p) {
      delete ((::GamR::Tree::TDetector<unsigned short>*)p);
   }
   static void deleteArray_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p) {
      delete [] ((::GamR::Tree::TDetector<unsigned short>*)p);
   }
   static void destruct_GamRcLcLTreecLcLTDetectorlEunsignedsPshortgR(void *p) {
      typedef ::GamR::Tree::TDetector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GamR::Tree::TDetector<unsigned short>

namespace ROOT {
   static TClass *vectorlEstringgR_Dictionary();
   static void vectorlEstringgR_TClassManip(TClass*);
   static void *new_vectorlEstringgR(void *p = nullptr);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>));
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "c++/v1/vector", 471,
                  typeid(vector<string>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));

      ::ROOT::AddClassAlternate("vector<string>","std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const vector<string>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *vectorlEstringgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const vector<string>*)nullptr)->GetClass();
      vectorlEstringgR_TClassManip(theClass);
   return theClass;
   }

   static void vectorlEstringgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   static TClass *vectorlEshared_ptrlETFormulagRsPgR_Dictionary();
   static void vectorlEshared_ptrlETFormulagRsPgR_TClassManip(TClass*);
   static void *new_vectorlEshared_ptrlETFormulagRsPgR(void *p = nullptr);
   static void *newArray_vectorlEshared_ptrlETFormulagRsPgR(Long_t size, void *p);
   static void delete_vectorlEshared_ptrlETFormulagRsPgR(void *p);
   static void deleteArray_vectorlEshared_ptrlETFormulagRsPgR(void *p);
   static void destruct_vectorlEshared_ptrlETFormulagRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<shared_ptr<TFormula> >*)
   {
      vector<shared_ptr<TFormula> > *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<shared_ptr<TFormula> >));
      static ::ROOT::TGenericClassInfo 
         instance("vector<shared_ptr<TFormula> >", -2, "c++/v1/vector", 471,
                  typeid(vector<shared_ptr<TFormula> >), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &vectorlEshared_ptrlETFormulagRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<shared_ptr<TFormula> >) );
      instance.SetNew(&new_vectorlEshared_ptrlETFormulagRsPgR);
      instance.SetNewArray(&newArray_vectorlEshared_ptrlETFormulagRsPgR);
      instance.SetDelete(&delete_vectorlEshared_ptrlETFormulagRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshared_ptrlETFormulagRsPgR);
      instance.SetDestructor(&destruct_vectorlEshared_ptrlETFormulagRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<shared_ptr<TFormula> > >()));

      ::ROOT::AddClassAlternate("vector<shared_ptr<TFormula> >","std::__1::vector<std::__1::shared_ptr<TFormula>, std::__1::allocator<std::__1::shared_ptr<TFormula> > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const vector<shared_ptr<TFormula> >*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *vectorlEshared_ptrlETFormulagRsPgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const vector<shared_ptr<TFormula> >*)nullptr)->GetClass();
      vectorlEshared_ptrlETFormulagRsPgR_TClassManip(theClass);
   return theClass;
   }

   static void vectorlEshared_ptrlETFormulagRsPgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshared_ptrlETFormulagRsPgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) vector<shared_ptr<TFormula> > : new vector<shared_ptr<TFormula> >;
   }
   static void *newArray_vectorlEshared_ptrlETFormulagRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) vector<shared_ptr<TFormula> >[nElements] : new vector<shared_ptr<TFormula> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshared_ptrlETFormulagRsPgR(void *p) {
      delete ((vector<shared_ptr<TFormula> >*)p);
   }
   static void deleteArray_vectorlEshared_ptrlETFormulagRsPgR(void *p) {
      delete [] ((vector<shared_ptr<TFormula> >*)p);
   }
   static void destruct_vectorlEshared_ptrlETFormulagRsPgR(void *p) {
      typedef vector<shared_ptr<TFormula> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<shared_ptr<TFormula> >

namespace ROOT {
   static TClass *maplEstringcOvoidmUgR_Dictionary();
   static void maplEstringcOvoidmUgR_TClassManip(TClass*);
   static void *new_maplEstringcOvoidmUgR(void *p = nullptr);
   static void *newArray_maplEstringcOvoidmUgR(Long_t size, void *p);
   static void delete_maplEstringcOvoidmUgR(void *p);
   static void deleteArray_maplEstringcOvoidmUgR(void *p);
   static void destruct_maplEstringcOvoidmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,void*>*)
   {
      map<string,void*> *ptr = nullptr;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,void*>));
      static ::ROOT::TGenericClassInfo 
         instance("map<string,void*>", -2, "c++/v1/map", 900,
                  typeid(map<string,void*>), ::ROOT::Internal::DefineBehavior(ptr, ptr),
                  &maplEstringcOvoidmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,void*>) );
      instance.SetNew(&new_maplEstringcOvoidmUgR);
      instance.SetNewArray(&newArray_maplEstringcOvoidmUgR);
      instance.SetDelete(&delete_maplEstringcOvoidmUgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvoidmUgR);
      instance.SetDestructor(&destruct_maplEstringcOvoidmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,void*> >()));

      ::ROOT::AddClassAlternate("map<string,void*>","std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, void*> > >");
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const map<string,void*>*)nullptr); R__UseDummy(_R__UNIQUE_DICT_(Init));

   // Dictionary for non-ClassDef classes
   static TClass *maplEstringcOvoidmUgR_Dictionary() {
      TClass* theClass =::ROOT::GenerateInitInstanceLocal((const map<string,void*>*)nullptr)->GetClass();
      maplEstringcOvoidmUgR_TClassManip(theClass);
   return theClass;
   }

   static void maplEstringcOvoidmUgR_TClassManip(TClass* ){
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvoidmUgR(void *p) {
      return  p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) map<string,void*> : new map<string,void*>;
   }
   static void *newArray_maplEstringcOvoidmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::Internal::TOperatorNewHelper*)p) map<string,void*>[nElements] : new map<string,void*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvoidmUgR(void *p) {
      delete ((map<string,void*>*)p);
   }
   static void deleteArray_maplEstringcOvoidmUgR(void *p) {
      delete [] ((map<string,void*>*)p);
   }
   static void destruct_maplEstringcOvoidmUgR(void *p) {
      typedef map<string,void*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,void*>

namespace {
  void TriggerDictionaryInitialization_libgamr_tree_Impl() {
    static const char* headers[] = {
"ExpDefn.hh",
"Event.hh",
"Detector.hh",
"DetDefn.hh",
"Reader.hh",
nullptr
    };
    static const char* includePaths[] = {
"/Users/99j/git/gamma-root/src/lib/tree",
"/Users/99j/root_build/include",
"/Users/99j/git/gamma-root/src/lib",
"/Users/99j/git/gamma-root/extern",
"/Users/99j/git/gamma-root/src/lib/tree",
"/Users/99j/root_build/include/",
"/Users/99j/git/gamma-root/build/src/lib/tree/",
nullptr
    };
    static const char* fwdDeclCode = R"DICTFWDDCLS(
#line 1 "libgamr_tree dictionary forward declarations' payload"
#pragma clang diagnostic ignored "-Wkeyword-compat"
#pragma clang diagnostic ignored "-Wignored-attributes"
#pragma clang diagnostic ignored "-Wreturn-type-c-linkage"
extern int __Cling_AutoLoading_Map;
namespace std{inline namespace __1{template <class _T1, class _T2> struct __attribute__((annotate("$clingAutoload$utility")))  __attribute__((annotate("$clingAutoload$string")))  pair;
}}
namespace GamR{namespace Tree{template <typename ...Ts> class __attribute__((annotate("$clingAutoload$Detector.hh")))  TDetector;
}}
namespace std{inline namespace __1{template <class _Tp> class __attribute__((annotate("$clingAutoload$iosfwd")))  __attribute__((annotate("$clingAutoload$string")))  allocator;
}}
namespace std{inline namespace __1{template <class ..._Tp> class __attribute__((annotate("$clingAutoload$__tuple")))  __attribute__((annotate("$clingAutoload$string")))  tuple;
}}
namespace GamR{namespace Tree{template <class ...Ts> class __attribute__((annotate("$clingAutoload$DetDefn.hh")))  __attribute__((annotate("$clingAutoload$Detector.hh")))  TDetDefn;
}}
namespace GamR{namespace Tree{template <class ...ADefns> class __attribute__((annotate("$clingAutoload$ExpDefn.hh")))  TExpDefn;
}}
namespace GamR{namespace Tree{template <class ...ADets> class __attribute__((annotate("$clingAutoload$Event.hh")))  TEvent;
}}
)DICTFWDDCLS";
    static const char* payloadCode = R"DICTPAYLOAD(
#line 1 "libgamr_tree dictionary payload"


#define _BACKWARD_BACKWARD_WARNING_H
// Inline headers
#include "ExpDefn.hh"
#include "Event.hh"
#include "Detector.hh"
#include "DetDefn.hh"
#include "Reader.hh"

#undef  _BACKWARD_BACKWARD_WARNING_H
)DICTPAYLOAD";
    static const char* classesHeaders[] = {
"GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,Double_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<UShort_t,UShort_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<UShort_t>", payloadCode, "@",
"GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>", payloadCode, "@",
"GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned int>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned short,unsigned short>", payloadCode, "@",
"GamR::Tree::TDetDefn<unsigned short>", payloadCode, "@",
"GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>", payloadCode, "@",
"GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t>", payloadCode, "@",
"GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,double,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>", payloadCode, "@",
"GamR::Tree::TDetector<UShort_t,UShort_t>", payloadCode, "@",
"GamR::Tree::TDetector<UShort_t>", payloadCode, "@",
"GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>", payloadCode, "@",
"GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned int,unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned int>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned short,unsigned short>", payloadCode, "@",
"GamR::Tree::TDetector<unsigned short>", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>,GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,double,unsigned int>,GamR::Tree::TDetector<ULong64_t,double,unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t,UShort_t>,GamR::Tree::TDetector<UShort_t>,GamR::Tree::TDetector<UShort_t>,GamR::Tree::TDetector<UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<UShort_t> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short,unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short>,GamR::Tree::TDetector<unsigned short> >", payloadCode, "@",
"GamR::Tree::TEvent<GamR::Tree::TDetector<unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t>,GamR::Tree::TDetDefn<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,Double_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,Double_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t,UInt_t>,GamR::Tree::TDetDefn<ULong64_t,UInt_t,UInt_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,double,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,double,unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<ULong64_t,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t,UShort_t>,GamR::Tree::TDetDefn<UShort_t>,GamR::Tree::TDetDefn<UShort_t>,GamR::Tree::TDetDefn<UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<UShort_t> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<double,double,int,int,float,float,float,float,float,float,float,float>,GamR::Tree::TDetDefn<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int,unsigned int>,GamR::Tree::TDetDefn<unsigned int,unsigned int,unsigned int> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short,unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short>,GamR::Tree::TDetDefn<unsigned short> >", payloadCode, "@",
"GamR::Tree::TExpDefn<GamR::Tree::TDetDefn<unsigned short> >", payloadCode, "@",
"tuple<pair<ULong64_t,double>,pair<double,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<ULong64_t,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double> >", payloadCode, "@",
"tuple<pair<double,double>,pair<double,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<int,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<float,double>,pair<bool,double>,pair<bool,double> >", payloadCode, "@",
"tuple<pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double>,pair<unsigned int,double> >", payloadCode, "@",
"tuple<pair<unsigned short,double> >", payloadCode, "@",
"tuple<pair<unsigned short,double>,pair<unsigned short,double> >", payloadCode, "@",
"tuple<pair<unsigned short,double>,pair<unsigned short,double>,pair<unsigned short,double> >", payloadCode, "@",
"tuple<std::pair<Double_t,Double_t>,std::pair<Double_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<Double_t,Double_t>,std::pair<Double_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Int_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Float_t,Double_t>,std::pair<Bool_t,Double_t>,std::pair<Bool_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<ULong64_t,Double_t>,std::pair<Double_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<ULong64_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t>,std::pair<UInt_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UShort_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UShort_t,Double_t>,std::pair<UShort_t,Double_t> >", payloadCode, "@",
"tuple<std::pair<UShort_t,Double_t>,std::pair<UShort_t,Double_t>,std::pair<UShort_t,Double_t> >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t> >,std::vector<GamR::Tree::TDetector<Double_t,Double_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Int_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Float_t,Bool_t,Bool_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<UInt_t,UInt_t,UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,Double_t,UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t,UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t,UInt_t> >,std::vector<GamR::Tree::TDetector<ULong64_t,UInt_t,UInt_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t,UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> >,std::vector<GamR::Tree::TDetector<UShort_t> > >", payloadCode, "@",
"tuple<std::vector<GamR::Tree::TDetector<UShort_t> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,double,unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<ULong64_t,unsigned int,unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<double,double,int,int,float,float,float,float,float,float,float,float> >,vector<GamR::Tree::TDetector<double,double,int,int,int,int,int,int,int,int,float,float,float,float,float,float,float,bool,bool> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int,unsigned int> >,vector<GamR::Tree::TDetector<unsigned int,unsigned int,unsigned int> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short,unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> >,vector<GamR::Tree::TDetector<unsigned short> > >", payloadCode, "@",
"tuple<vector<GamR::Tree::TDetector<unsigned short> > >", payloadCode, "@",
nullptr
};
    static bool isInitialized = false;
    if (!isInitialized) {
      TROOT::RegisterModule("libgamr_tree",
        headers, includePaths, payloadCode, fwdDeclCode,
        TriggerDictionaryInitialization_libgamr_tree_Impl, {}, classesHeaders, /*hasCxxModule*/false);
      isInitialized = true;
    }
  }
  static struct DictInit {
    DictInit() {
      TriggerDictionaryInitialization_libgamr_tree_Impl();
    }
  } __TheDictionaryInitializer;
}
void TriggerDictionaryInitialization_libgamr_tree() {
  TriggerDictionaryInitialization_libgamr_tree_Impl();
}
